@model IEnumerable<MVCCamiloMentoria.ViewModels.AlunoViewModel>

@{
    ViewData["Title"] = "Alunos Cadastrados";
}

<div class="card shadow-sm mb-5">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <h4 class="mb-0">
            <i class="fas fa-users me-2"></i>Alunos Cadastrados
        </h4>
        </div>

    <div class="card-body px-0">
        <div class="table-responsive">
            <table id="alunosTable" class="table table-bordered table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th class="sortable-column" data-column="0">
                            <div class="d-flex flex-column">
                                <span>Aluno</span>
                                <input type="text" class="form-control form-control-sm mt-1 column-filter" data-column="0" placeholder="Filtrar...">
                            </div>
                        </th>
                        <th class="sortable-column" data-column="1">
                            <div class="d-flex flex-column">
                                <span>Nascimento</span>
                            </div>
                        </th>
                        <th class="sortable-column" data-column="2">
                            <div class="d-flex flex-column">
                                <span>E-mail</span>
                            </div>
                        </th>
                        <th class="sortable-column" data-column="3">
                            <div class="d-flex flex-column">
                                <span>Escola</span>
                                <input type="text" class="form-control form-control-sm mt-1 column-filter" data-column="3" placeholder="Filtrar...">
                            </div>
                        </th>
                        <th class="text-center">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Nome)</td>
                            <td>@item.DataNascimento.ToString("dd/MM/yyyy")</td>
                            <td>@Html.DisplayFor(modelItem => item.EmailEscolar)</td>
                            <td>@Html.DisplayFor(modelItem => item.Escolas!.FirstOrDefault()!.Nome)</td>
                            <td class="d-flex justify-content-around">
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">
                                    <i class="fas fa-eye"></i> Detalhes
                                </a>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">
                                    <i class="fas fa-edit"></i> Editar
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">
                                    <i class="fas fa-trash"></i> Excluir
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="card-footer">
        <nav aria-label="Paginação">
            <ul class="pagination justify-content-center mb-0">
                @if (ViewBag.PaginaAtual > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { pagina = ViewBag.PaginaAtual - 1 })">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    </li>
                }

                @for (int i = 1; i <= ViewBag.TotalPaginas; i++)
                {
                    <li class="page-item @(i == ViewBag.PaginaAtual ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { pagina = i })">@i</a>
                    </li>
                }

                @if (ViewBag.PaginaAtual < ViewBag.TotalPaginas)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { pagina = ViewBag.PaginaAtual + 1 })">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            let sortDirection = {};

            $('.sortable-column').each(function() {
                const colIndex = $(this).data('column');
                sortDirection[colIndex] = 1;
                $(this).append(' <i class="fas fa-sort"></i>');
            });

            $('.column-filter').on('keyup', function() {
                const columnIndex = $(this).data('column');
                const searchText = $(this).val().toLowerCase();

                $('#alunosTable tbody tr').filter(function() {
                    const cellText = $(this).find('td').eq(columnIndex).text().toLowerCase();
                    $(this).toggle(cellText.includes(searchText));
                });
            });

            $('.sortable-column').on('click', function() {
                const columnIndex = $(this).data('column');
                sortDirection[columnIndex] *= -1;

                $('.sortable-column i').removeClass('fa-sort-up fa-sort-down').addClass('fa-sort');

                const sortIcon = $(this).find('i');
                sortIcon.removeClass('fa-sort');

                if (sortDirection[columnIndex] === 1) {
                    sortIcon.addClass('fa-sort-up');
                } else {
                    sortIcon.addClass('fa-sort-down');
                }

                sortTable(columnIndex, sortDirection[columnIndex]);
            });

            function sortTable(columnIndex, direction) {
                const $table = $('#alunosTable');
                const $rows = $table.find('tbody tr').get();

                $rows.sort(function(a, b) {
                    const aText = $(a).find('td').eq(columnIndex).text().toLowerCase();
                    const bText = $(b).find('td').eq(columnIndex).text().toLowerCase();

                    if (columnIndex === 1) {
                        const aDate = parseDate(aText);
                        const bDate = parseDate(bText);
                        return (aDate - bDate) * direction;
                    }

                    return aText.localeCompare(bText) * direction;
                });

                $.each($rows, function(index, row) {
                    $table.children('tbody').append(row);
                });
            }

            function parseDate(dateStr) {
                const parts = dateStr.split('/');
                return new Date(parts[2], parts[1] - 1, parts[0]);
            }
        });
    </script>
}

<style>
    .card {
        border-radius: 0.25rem;
    }

    .card-header {
        padding: 1rem 1.5rem;
    }

    .table {
        margin-bottom: 0;
    }

        .table thead th {
            vertical-align: middle;
            background-color: #343a40;
            color: white;
        }

    .table-bordered {
        border: 1px solid #dee2e6;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(0, 0, 0, 0.02);
    }

    .table-hover tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.075);
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
        line-height: 1.5;
        border-radius: 0.2rem;
    }

    .column-filter {
        max-width: 150px;
        margin: 0 auto;
        padding: 0.25rem 0.5rem;
        font-size: 0.75rem;
        border-radius: 0.2rem;
        border: 1px solid #ced4da;
    }

    .sortable-column {
        cursor: pointer;
        position: relative;
    }

        .sortable-column:hover {
            background-color: rgba(13, 110, 253, 1);
        }

    .fa-sort, .fa-sort-up, .fa-sort-down {
        margin-left: 5px;
    }

    .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
    }

    .page-link {
        color: #007bff;
    }
</style>