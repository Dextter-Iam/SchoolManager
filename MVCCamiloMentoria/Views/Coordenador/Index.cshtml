@model IEnumerable<MVCCamiloMentoria.ViewModels.CoordenadorViewModel>

@{
	ViewData["Title"] = "Coordenadores";
}

<div class="card shadow-sm mb-5">
	<div class="card-header bg-primary text-white d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center">
		<h4 class="mb-2 mb-md-0">Coordenadores</h4>
		<form asp-action="Index" method="get" class="d-flex w-100 w-md-auto" style="max-width: 720px;">
			<input type="text" name="FiltroGeral" class="form-control form-control-md me-2" placeholder="Pesquisar por nome, matrícula, escola etc." />
			<button type="submit" class="btn btn-light btn-md text-primary">🔍 Pesquisar</button>
		</form>
	</div>
<div class="card">
	<div class="card-body p-0">
		<table id="coordenadoresTable" class="table table-bordered table-striped">
			<thead class="thead-dark">
				<tr>
					<th class="sortable-column" data-column="0">@Html.DisplayNameFor(model => model.Nome)</th>
					<th class="sortable-column" data-column="1">@Html.DisplayName("Matrícula")</th>
					<th class="sortable-column" data-column="2">@Html.DisplayName("Endereço")</th>
					<th class="sortable-column" data-column="3">@Html.DisplayName("Escola")</th>
					<th class="text-center">Ações</th>
				</tr>
			</thead>

				<tbody>
					@if (Model.Any())
					{
						foreach (var coordenador in Model)
						{
							<tr>
								<td>@coordenador.Nome</td>
								<td>@coordenador.Matricula</td>
								<td>
									@if (coordenador.Endereco != null)
									{
										@($"{coordenador.Endereco.NomeRua}, {coordenador.Endereco.NumeroRua}")
									}
									else
									{
										<span class="text-muted">Não informado</span>
									}
								</td>
								<td>
									@if (coordenador.Escola != null)
									{
										@coordenador.Escola.Nome
									}
									else
									{
										<span class="text-muted">Nenhuma Escola</span>
									}
								</td>
								<td>
									<div class="d-flex justify-content-center gap-2">
										<a asp-action="Details" asp-route-id="@coordenador.Id" class="btn btn-info btn-sm px-3" title="Detalhes">
											<i class="fas fa-eye"></i>
										</a>
										<a asp-action="Edit" asp-route-id="@coordenador.Id" class="btn btn-warning btn-sm px-3" title="Editar">
											<i class="fas fa-pencil-alt"></i>
										</a>
										<a asp-action="Delete" asp-route-id="@coordenador.Id" class="btn btn-danger btn-sm px-3" title="Excluir">
											<i class="fas fa-trash-alt"></i>
										</a>
									</div>
								</td>
							</tr>
						}
					}
					else
					{
						<tr>
							<td colspan="5" class="text-center text-muted">Nenhum coordenador cadastrado.</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
</div>
</div>
@section Scripts {
	<script>
		$(document).ready(function () {
			const sortDirection = {};

			$('.sortable-column').each(function () {
				const colIndex = $(this).data('column');
				sortDirection[colIndex] = 1;
				$(this).append(' <i class="fas fa-sort"></i>');
			});

			$('.column-filter').on('keyup', function () {
				const columnIndex = $(this).data('column');
				const searchText = $(this).val().toLowerCase();

				$('#coordenadoresTable tbody tr').filter(function () {
					const cellText = $(this).find('td').eq(columnIndex).text().toLowerCase();
					$(this).toggle(cellText.includes(searchText));
				});
			});

			$('.sortable-column').on('click', function () {
				const columnIndex = $(this).data('column');
				sortDirection[columnIndex] *= -1;

				$('.sortable-column i').removeClass('fa-sort-up fa-sort-down').addClass('fa-sort');

				const sortIcon = $(this).find('i');
				sortIcon.removeClass('fa-sort');
				if (sortDirection[columnIndex] === 1) {
					sortIcon.addClass('fa-sort-up');
				} else {
					sortIcon.addClass('fa-sort-down');
				}

				sortTable(columnIndex, sortDirection[columnIndex]);
			});

			function sortTable(columnIndex, direction) {
				const $table = $('#coordenadoresTable');
				const $rows = $table.find('tbody tr').get();

				$rows.sort(function (a, b) {
					const aText = $(a).find('td').eq(columnIndex).text().toLowerCase();
					const bText = $(b).find('td').eq(columnIndex).text().toLowerCase();
					return aText.localeCompare(bText) * direction;
				});

				$.each($rows, function (index, row) {
					$table.children('tbody').append(row);
				});
			}
		});
	</script>
	}

<style>
	html, body {
		margin: 0;
		padding: 0;
		background: linear-gradient(120deg, #eef5fd, #ffffff);
		font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
	}

	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 2rem;
	}

	.card {
		border-radius: 1rem;
		box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
	}

	.card-header {
		background-color: #1976d2;
		color: white;
		font-weight: bold;
	}

	.table {
		border-radius: 0.5rem;
		overflow: hidden;
	}

		.table thead {
			background-color: #1976d2;
			color: white;
		}

		.table th, .table td {
			text-align: center;
			padding: 12px;
			font-size: 1rem;
		}

		.table .btn {
			border-radius: 0.25rem;
			padding: 6px 12px;
			font-size: 0.9rem;
			transition: all 0.3s ease;
		}

			.table .btn:hover {
				transform: translateY(-2px);
				box-shadow: 0 5px 15px rgba(25, 118, 210, 0.2);
			}

	.btn-info {
		background-color: #0288d1;
		color: white;
	}

	.btn-warning {
		background-color: #fbc02d;
		color: white;
	}

	.btn-danger {
		background-color: #d32f2f;
		color: white;
	}

	.btn-success {
		background-color: #388e3c;
		color: white;
	}

	.btn-info:hover {
		background-color: #0277bd;
	}

	.btn-warning:hover {
		background-color: #f9a825;
	}

	.btn-danger:hover {
		background-color: #c62828;
	}

	.btn-success:hover {
		background-color: #2c6b2f;
	}

	.mb-5 {
		margin-bottom: 3rem;
	}

	.d-flex {
		display: flex;
	}

	.justify-content-center {
		justify-content: center;
	}

	.gap-2 > * {
		margin-right: 0.5rem;
	}
</style>