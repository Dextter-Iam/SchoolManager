// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCCamiloMentoria.Migrations
{
    [DbContext(typeof(EscolaContext))]
    [Migration("20250511034800_excludeTables")]
    partial class excludeTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCCamiloMentoria.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AnoInscricao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("BolsaEscolar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailEscolar")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NomeResponsavel1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeResponsavel2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parentesco1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parentesco2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("EscolaId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Aluno", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.AlunoResponsavel", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("ResponsavelId")
                        .HasColumnType("int");

                    b.HasKey("AlunoId", "ResponsavelId");

                    b.HasIndex("ResponsavelId");

                    b.ToTable("AlunoResponsavel", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.AlunoTelefone", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("TelefoneId")
                        .HasColumnType("int");

                    b.Property<int>("DDD")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasMaxLength(12)
                        .HasColumnType("int");

                    b.HasKey("AlunoId", "TelefoneId");

                    b.HasIndex("TelefoneId");

                    b.ToTable("AlunoTelefone", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Aula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ConfirmacaoPresenca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HorarioFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("EscolaId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Aula", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Coordenador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Matricula")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.HasIndex("EscolaId");

                    b.ToTable("Coordenador", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Diretor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Matricula")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.HasIndex("EscolaId");

                    b.ToTable("Diretor", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.ToTable("Disciplina", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CEP")
                        .HasMaxLength(8)
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("NomeRua")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NumeroRua")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Equipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<int>("ModeloId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("StatusOperacional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Equipamento", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Escola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.HasIndex("EstadoId");

                    b.ToTable("Escola", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Estado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("AlunoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sigla")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Estado", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<string>("FinalidadeFornecedor")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(190)
                        .HasColumnType("nvarchar(190)");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.ToTable("Fornecedor", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(190)
                        .HasColumnType("nvarchar(190)");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.ToTable("MarcaEquipamento", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(190)
                        .HasColumnType("nvarchar(190)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("ModeloEquipamento", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.PrestadorServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("EmpresaNome")
                        .IsRequired()
                        .HasMaxLength(190)
                        .HasColumnType("nvarchar(190)");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServicoFinalidade")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.ToTable("PrestadorServico", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.ProfessorDisciplina", b =>
                {
                    b.Property<int>("ProfessorDisciplinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessorDisciplinaId"));

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("ProfessorDisciplinaId");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("ProfessorDisciplina", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.ProfessorTurma", b =>
                {
                    b.Property<int>("ProfessorTurmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessorTurmaId"));

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("ProfessorTurmaId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("TurmaId");

                    b.ToTable("ProfessorTurma", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Responsavel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("Responsavel", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Supervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Matricula")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("Supervisor", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.SupervisorEscola", b =>
                {
                    b.Property<int>("SupervisorEscolaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupervisorEscolaId"));

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.HasKey("SupervisorEscolaId");

                    b.HasIndex("EscolaId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("SupervisorEscola", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CoordenadorId")
                        .HasColumnType("int");

                    b.Property<int>("DDD")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<int?>("DiretorId")
                        .HasColumnType("int");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasMaxLength(12)
                        .HasColumnType("int");

                    b.Property<int?>("PrestadorServicoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponsavelId")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoordenadorId");

                    b.HasIndex("DiretorId");

                    b.HasIndex("EscolaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("PrestadorServicoId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("ResponsavelId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Telefone", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Turma", b =>
                {
                    b.Property<int>("TurmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurmaId"));

                    b.Property<int>("AnoLetivo")
                        .HasColumnType("int");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("NomeTurma")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("TurmaId");

                    b.HasIndex("EscolaId");

                    b.ToTable("Turma", (string)null);
                });

            modelBuilder.Entity("PresencaAula", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("AulaId")
                        .HasColumnType("int");

                    b.Property<bool>("Presente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("AlunoId", "AulaId");

                    b.HasIndex("AulaId");

                    b.ToTable("PresencaAula", (string)null);
                });

            modelBuilder.Entity("Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Matricula")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.HasIndex("EscolaId");

                    b.ToTable("Professor", (string)null);
                });

            modelBuilder.Entity("TurmaDisciplina", b =>
                {
                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.HasKey("TurmaId", "DisciplinaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("TurmaDisciplina", (string)null);
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Aluno", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Endereco", "Endereco")
                        .WithMany("Alunos")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Escola", "Escola")
                        .WithMany("Alunos")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Escola");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.AlunoResponsavel", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Aluno", "Aluno")
                        .WithMany("AlunoResponsavel")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Responsavel", "Responsavel")
                        .WithMany("AlunoResponsavel")
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.AlunoTelefone", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Aluno", "Aluno")
                        .WithMany("AlunoTelefone")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Telefone", "Telefone")
                        .WithMany("Alunos")
                        .HasForeignKey("TelefoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Telefone");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Aula", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Disciplina", "Disciplina")
                        .WithMany("Aulas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Escola", "Escola")
                        .WithMany()
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Professor", "Professor")
                        .WithMany("Aulas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Turma", "Turma")
                        .WithMany("Aulas")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("Escola");

                    b.Navigation("Professor");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Coordenador", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Endereco", "Endereco")
                        .WithOne()
                        .HasForeignKey("MVCCamiloMentoria.Models.Coordenador", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Escola", "Escola")
                        .WithMany("Coordenadores")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Diretor", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Endereco", "Endereco")
                        .WithOne()
                        .HasForeignKey("MVCCamiloMentoria.Models.Diretor", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Escola", "Escola")
                        .WithMany("Diretores")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Disciplina", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Escola", "Escola")
                        .WithMany("Disciplina")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Endereco", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Estado", "Estado")
                        .WithMany("Enderecos")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Equipamento", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Escola", "Escola")
                        .WithMany("Equipamentos")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Modelo", "Modelo")
                        .WithMany("Equipamentos")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Escola");

                    b.Navigation("Marca");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Escola", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Endereco", "Endereco")
                        .WithOne()
                        .HasForeignKey("MVCCamiloMentoria.Models.Escola", "EnderecoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.Navigation("Endereco");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Estado", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Aluno", null)
                        .WithMany("Estado")
                        .HasForeignKey("AlunoId");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Fornecedor", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Escola", "Escola")
                        .WithMany("Fornecedores")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Marca", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Escola", "Escola")
                        .WithMany()
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Modelo", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Marca", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.PrestadorServico", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Escola", "Escola")
                        .WithMany("PrestadorServico")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.ProfessorDisciplina", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Disciplina", "Disciplina")
                        .WithMany("Professores")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Professor", "Professor")
                        .WithMany("Disciplinas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.ProfessorTurma", b =>
                {
                    b.HasOne("Professor", "Professor")
                        .WithMany("Turmas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Turma", "Turma")
                        .WithMany("Professores")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Professor");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Responsavel", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Endereco", "Endereco")
                        .WithOne()
                        .HasForeignKey("MVCCamiloMentoria.Models.Responsavel", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Supervisor", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Endereco", "Endereco")
                        .WithOne()
                        .HasForeignKey("MVCCamiloMentoria.Models.Supervisor", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.SupervisorEscola", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Escola", "Escola")
                        .WithMany("SupervisorEscolas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Supervisor", "Supervisor")
                        .WithMany("SupervisorEscolas")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Telefone", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Coordenador", "Coordenador")
                        .WithMany("Telefones")
                        .HasForeignKey("CoordenadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MVCCamiloMentoria.Models.Diretor", "Diretor")
                        .WithMany("Telefones")
                        .HasForeignKey("DiretorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MVCCamiloMentoria.Models.Escola", "Escola")
                        .WithMany("Telefones")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Fornecedor", "Fornecedor")
                        .WithMany("Telefones")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MVCCamiloMentoria.Models.PrestadorServico", "PrestadorServico")
                        .WithMany("Telefones")
                        .HasForeignKey("PrestadorServicoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Professor", "Professor")
                        .WithMany("Telefones")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MVCCamiloMentoria.Models.Responsavel", "Responsavel")
                        .WithMany("Telefones")
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MVCCamiloMentoria.Models.Supervisor", "Supervisor")
                        .WithMany("Telefones")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Coordenador");

                    b.Navigation("Diretor");

                    b.Navigation("Escola");

                    b.Navigation("Fornecedor");

                    b.Navigation("PrestadorServico");

                    b.Navigation("Professor");

                    b.Navigation("Responsavel");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Turma", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Escola", "Escola")
                        .WithMany("Turmas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("PresencaAula", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Aluno", null)
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Aula", null)
                        .WithMany()
                        .HasForeignKey("AulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Professor", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Endereco", "Endereco")
                        .WithOne()
                        .HasForeignKey("Professor", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Escola", "Escola")
                        .WithMany("Professores")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("TurmaDisciplina", b =>
                {
                    b.HasOne("MVCCamiloMentoria.Models.Disciplina", "Disciplina")
                        .WithMany("TurmaDisciplinas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MVCCamiloMentoria.Models.Turma", "Turma")
                        .WithMany("TurmaDisciplinas")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Aluno", b =>
                {
                    b.Navigation("AlunoResponsavel");

                    b.Navigation("AlunoTelefone");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Coordenador", b =>
                {
                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Diretor", b =>
                {
                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Disciplina", b =>
                {
                    b.Navigation("Aulas");

                    b.Navigation("Professores");

                    b.Navigation("TurmaDisciplinas");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Endereco", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Escola", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Coordenadores");

                    b.Navigation("Diretores");

                    b.Navigation("Disciplina");

                    b.Navigation("Equipamentos");

                    b.Navigation("Fornecedores");

                    b.Navigation("PrestadorServico");

                    b.Navigation("Professores");

                    b.Navigation("SupervisorEscolas");

                    b.Navigation("Telefones");

                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Estado", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Fornecedor", b =>
                {
                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Marca", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Modelo", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.PrestadorServico", b =>
                {
                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Responsavel", b =>
                {
                    b.Navigation("AlunoResponsavel");

                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Supervisor", b =>
                {
                    b.Navigation("SupervisorEscolas");

                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Telefone", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("MVCCamiloMentoria.Models.Turma", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Aulas");

                    b.Navigation("Professores");

                    b.Navigation("TurmaDisciplinas");
                });

            modelBuilder.Entity("Professor", b =>
                {
                    b.Navigation("Aulas");

                    b.Navigation("Disciplinas");

                    b.Navigation("Telefones");

                    b.Navigation("Turmas");
                });
#pragma warning restore 612, 618
        }
    }
}
